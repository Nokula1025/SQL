-- Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT CustomerId, FirstName, LastName, Country
FROM customers
WHERE Country != "USA";

-- Show only the Customers from Brazil.
SELECT CustomerId, FirstName, LastName, Country
FROM customers
WHERE Country = "Brazil";

-- Find the Invoices of customers who are from Brazil.
SELECT customers.FirstName, customers.LastName, invoices.InvoiceId, invoices.InvoiceDate, invoices.BillingCountry
FROM customers
INNER JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE invoices.BillingCountry = "Brazil";

-- Show the Employees who are Sales Agents.
SELECT EmployeeId, FirstName, LastName, Title
FROM employees
WHERE Title LIKE "Sales%Agent";

-- Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT(BillingCountry)
FROM invoices
ORDER BY BillingCountry;

-- Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.FirstName, employees.LastName, invoices.InvoiceId, employees.Title
FROM employees
INNER JOIN invoices
ON employees.EmployeeId = invoices.CustomerId
WHERE employees.Title = "Sales Support Agent";

-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT customers.CustomerId, customers.FirstName AS CustomerFirstName, customers.LastName AS CustomerLastName, customers.Country, employees.FirstName AS EmployeeFirstName, employees.LastName AS EmployeeLastName, SUM(invoices.Total) AS InvoiceTotal, employees.Title
FROM customers
INNER JOIN employees
ON customers.CustomerId = employees.EmployeeId
INNER JOIN invoices
ON employees.EmployeeId = invoices.CustomerId
WHERE employees.Title = "Sales Support Agent"
GROUP BY customers.CustomerId
ORDER BY InvoiceTotal DESC;

-- How many Invoices were there in 2009?
SELECT COUNT(InvoiceId) AS TotalinvoicesFrom2009
FROM invoices
WHERE InvoiceDate LIKE "%2009%";

--What are the total sales for 2009?
SELECT SUM(Total) AS TotalSalesFor2009
FROM invoices
WHERE InvoiceDate LIKE "%2009%";

-- Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.Name, invoices.InvoiceId
FROM tracks
INNER JOIN invoice_items
ON tracks.TrackId = invoice_items.TrackId
INNER JOIN invoices
ON invoice_items.InvoiceId = invoices.InvoiceId
ORDER BY invoices.InvoiceId;

-- Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.Name AS TrackName, artists.Name AS ArtistName, invoices.InvoiceId
FROM invoices
INNER JOIN invoice_items
ON invoices.InvoiceId = invoice_items.InvoiceId
INNER JOIN tracks
ON invoice_items.TrackId = tracks.TrackId
INNER JOIN albums
ON tracks.AlbumId = albums.AlbumId
INNER JOIN artists
ON albums.ArtistId = artists.ArtistId
ORDER BY invoices.InvoiceId;

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS TrackName, albums.Title, media_types.Name AS MediaType, genres.Name AS GenreType
FROM media_types
INNER JOIN tracks
ON media_types.MediaTypeId = tracks.MediaTypeId
INNER JOIN genres
ON tracks.GenreId = genres.GenreId
INNER JOIN albums
ON tracks.AlbumId = albums.AlbumId;

-- Show the total sales made by each sales agent.
SELECT employees.FirstName, employees.LastName, SUM(invoices.Total) AS TotalSales, employees.Title
FROM employees
INNER JOIN customers
ON employees.EmployeeId = customers.CustomerId
INNER JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = "Sales Support Agent"
GROUP BY EmployeeId;
